// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: mpproto.proto

package mpproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Feedback_ResponseType int32

const (
	Feedback_QUESTION Feedback_ResponseType = 0
	Feedback_ANSWER   Feedback_ResponseType = 1
)

// Enum value maps for Feedback_ResponseType.
var (
	Feedback_ResponseType_name = map[int32]string{
		0: "QUESTION",
		1: "ANSWER",
	}
	Feedback_ResponseType_value = map[string]int32{
		"QUESTION": 0,
		"ANSWER":   1,
	}
)

func (x Feedback_ResponseType) Enum() *Feedback_ResponseType {
	p := new(Feedback_ResponseType)
	*p = x
	return p
}

func (x Feedback_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Feedback_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[0].Descriptor()
}

func (Feedback_ResponseType) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[0]
}

func (x Feedback_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Feedback_ResponseType.Descriptor instead.
func (Feedback_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{2, 0}
}

type Page_PageType int32

const (
	Page_SINGLE Page_PageType = 0
	Page_LEFT   Page_PageType = 1
	Page_RIGHT  Page_PageType = 2
	Page_DOUBLE Page_PageType = 3
)

// Enum value maps for Page_PageType.
var (
	Page_PageType_name = map[int32]string{
		0: "SINGLE",
		1: "LEFT",
		2: "RIGHT",
		3: "DOUBLE",
	}
	Page_PageType_value = map[string]int32{
		"SINGLE": 0,
		"LEFT":   1,
		"RIGHT":  2,
		"DOUBLE": 3,
	}
)

func (x Page_PageType) Enum() *Page_PageType {
	p := new(Page_PageType)
	*p = x
	return p
}

func (x Page_PageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Page_PageType) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[1].Descriptor()
}

func (Page_PageType) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[1]
}

func (x Page_PageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Page_PageType.Descriptor instead.
func (Page_PageType) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10, 0}
}

type Page_ChapterType int32

const (
	Page_LATEST     Page_ChapterType = 0
	Page_SEQUENCE   Page_ChapterType = 1
	Page_NOSEQUENCE Page_ChapterType = 2
)

// Enum value maps for Page_ChapterType.
var (
	Page_ChapterType_name = map[int32]string{
		0: "LATEST",
		1: "SEQUENCE",
		2: "NOSEQUENCE",
	}
	Page_ChapterType_value = map[string]int32{
		"LATEST":     0,
		"SEQUENCE":   1,
		"NOSEQUENCE": 2,
	}
)

func (x Page_ChapterType) Enum() *Page_ChapterType {
	p := new(Page_ChapterType)
	*p = x
	return p
}

func (x Page_ChapterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Page_ChapterType) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[2].Descriptor()
}

func (Page_ChapterType) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[2]
}

func (x Page_ChapterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Page_ChapterType.Descriptor instead.
func (Page_ChapterType) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10, 1}
}

type Title_Language int32

const (
	Title_ENGLISH Title_Language = 0
	Title_SPANISH Title_Language = 1
)

// Enum value maps for Title_Language.
var (
	Title_Language_name = map[int32]string{
		0: "ENGLISH",
		1: "SPANISH",
	}
	Title_Language_value = map[string]int32{
		"ENGLISH": 0,
		"SPANISH": 1,
	}
)

func (x Title_Language) Enum() *Title_Language {
	p := new(Title_Language)
	*p = x
	return p
}

func (x Title_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Title_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[3].Descriptor()
}

func (Title_Language) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[3]
}

func (x Title_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Title_Language.Descriptor instead.
func (Title_Language) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{12, 0}
}

type TitleDetailView_Rating int32

const (
	TitleDetailView_ALLAGE   TitleDetailView_Rating = 0
	TitleDetailView_TEEN     TitleDetailView_Rating = 1
	TitleDetailView_TEENPLUS TitleDetailView_Rating = 2
	TitleDetailView_MATURE   TitleDetailView_Rating = 3
)

// Enum value maps for TitleDetailView_Rating.
var (
	TitleDetailView_Rating_name = map[int32]string{
		0: "ALLAGE",
		1: "TEEN",
		2: "TEENPLUS",
		3: "MATURE",
	}
	TitleDetailView_Rating_value = map[string]int32{
		"ALLAGE":   0,
		"TEEN":     1,
		"TEENPLUS": 2,
		"MATURE":   3,
	}
)

func (x TitleDetailView_Rating) Enum() *TitleDetailView_Rating {
	p := new(TitleDetailView_Rating)
	*p = x
	return p
}

func (x TitleDetailView_Rating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleDetailView_Rating) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[4].Descriptor()
}

func (TitleDetailView_Rating) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[4]
}

func (x TitleDetailView_Rating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleDetailView_Rating.Descriptor instead.
func (TitleDetailView_Rating) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{13, 0}
}

type TitleDetailView_UpdateTiming int32

const (
	TitleDetailView_NOT_REGULARLY TitleDetailView_UpdateTiming = 0
	TitleDetailView_MONDAY        TitleDetailView_UpdateTiming = 1
	TitleDetailView_TUESDAY       TitleDetailView_UpdateTiming = 2
	TitleDetailView_WEDNESDAY     TitleDetailView_UpdateTiming = 3
	TitleDetailView_THURSDAY      TitleDetailView_UpdateTiming = 4
	TitleDetailView_FRIDAY        TitleDetailView_UpdateTiming = 5
	TitleDetailView_SATURDAY      TitleDetailView_UpdateTiming = 6
	TitleDetailView_SUNDAY        TitleDetailView_UpdateTiming = 7
	TitleDetailView_DAY           TitleDetailView_UpdateTiming = 8
)

// Enum value maps for TitleDetailView_UpdateTiming.
var (
	TitleDetailView_UpdateTiming_name = map[int32]string{
		0: "NOT_REGULARLY",
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
		8: "DAY",
	}
	TitleDetailView_UpdateTiming_value = map[string]int32{
		"NOT_REGULARLY": 0,
		"MONDAY":        1,
		"TUESDAY":       2,
		"WEDNESDAY":     3,
		"THURSDAY":      4,
		"FRIDAY":        5,
		"SATURDAY":      6,
		"SUNDAY":        7,
		"DAY":           8,
	}
)

func (x TitleDetailView_UpdateTiming) Enum() *TitleDetailView_UpdateTiming {
	p := new(TitleDetailView_UpdateTiming)
	*p = x
	return p
}

func (x TitleDetailView_UpdateTiming) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleDetailView_UpdateTiming) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[5].Descriptor()
}

func (TitleDetailView_UpdateTiming) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[5]
}

func (x TitleDetailView_UpdateTiming) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleDetailView_UpdateTiming.Descriptor instead.
func (TitleDetailView_UpdateTiming) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{13, 1}
}

// original was "Result", using "UpdateResult" due to pb-rs issues.
type UpdateProfileResultView_UpdateResult int32

const (
	UpdateProfileResultView_SUCCESS    UpdateProfileResultView_UpdateResult = 0
	UpdateProfileResultView_DUPLICATED UpdateProfileResultView_UpdateResult = 1
	UpdateProfileResultView_NG_WORD    UpdateProfileResultView_UpdateResult = 2
)

// Enum value maps for UpdateProfileResultView_UpdateResult.
var (
	UpdateProfileResultView_UpdateResult_name = map[int32]string{
		0: "SUCCESS",
		1: "DUPLICATED",
		2: "NG_WORD",
	}
	UpdateProfileResultView_UpdateResult_value = map[string]int32{
		"SUCCESS":    0,
		"DUPLICATED": 1,
		"NG_WORD":    2,
	}
)

func (x UpdateProfileResultView_UpdateResult) Enum() *UpdateProfileResultView_UpdateResult {
	p := new(UpdateProfileResultView_UpdateResult)
	*p = x
	return p
}

func (x UpdateProfileResultView_UpdateResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProfileResultView_UpdateResult) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[6].Descriptor()
}

func (UpdateProfileResultView_UpdateResult) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[6]
}

func (x UpdateProfileResultView_UpdateResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProfileResultView_UpdateResult.Descriptor instead.
func (UpdateProfileResultView_UpdateResult) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{15, 0}
}

type TransitionAction_PresentationMethod int32

const (
	TransitionAction_PUSH     TransitionAction_PresentationMethod = 0
	TransitionAction_MODAL    TransitionAction_PresentationMethod = 1
	TransitionAction_EXTERNAL TransitionAction_PresentationMethod = 2
)

// Enum value maps for TransitionAction_PresentationMethod.
var (
	TransitionAction_PresentationMethod_name = map[int32]string{
		0: "PUSH",
		1: "MODAL",
		2: "EXTERNAL",
	}
	TransitionAction_PresentationMethod_value = map[string]int32{
		"PUSH":     0,
		"MODAL":    1,
		"EXTERNAL": 2,
	}
)

func (x TransitionAction_PresentationMethod) Enum() *TransitionAction_PresentationMethod {
	p := new(TransitionAction_PresentationMethod)
	*p = x
	return p
}

func (x TransitionAction_PresentationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransitionAction_PresentationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[7].Descriptor()
}

func (TransitionAction_PresentationMethod) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[7]
}

func (x TransitionAction_PresentationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransitionAction_PresentationMethod.Descriptor instead.
func (TransitionAction_PresentationMethod) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{17, 0}
}

type ErrorResult_Action int32

const (
	ErrorResult_DEFAULT        ErrorResult_Action = 0
	ErrorResult_UNAUTHORIZED   ErrorResult_Action = 1
	ErrorResult_MAINTAINENCE   ErrorResult_Action = 2
	ErrorResult_GEOIP_BLOCKING ErrorResult_Action = 3
)

// Enum value maps for ErrorResult_Action.
var (
	ErrorResult_Action_name = map[int32]string{
		0: "DEFAULT",
		1: "UNAUTHORIZED",
		2: "MAINTAINENCE",
		3: "GEOIP_BLOCKING",
	}
	ErrorResult_Action_value = map[string]int32{
		"DEFAULT":        0,
		"UNAUTHORIZED":   1,
		"MAINTAINENCE":   2,
		"GEOIP_BLOCKING": 3,
	}
)

func (x ErrorResult_Action) Enum() *ErrorResult_Action {
	p := new(ErrorResult_Action)
	*p = x
	return p
}

func (x ErrorResult_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorResult_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_mpproto_proto_enumTypes[8].Descriptor()
}

func (ErrorResult_Action) Type() protoreflect.EnumType {
	return &file_mpproto_proto_enumTypes[8]
}

func (x ErrorResult_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorResult_Action.Descriptor instead.
func (ErrorResult_Action) EnumDescriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{34, 0}
}

type Popup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsDefault  *Popup_OSDefault  `protobuf:"bytes,1,opt,name=os_default,json=osDefault,proto3" json:"os_default,omitempty"`
	AppDefault *Popup_AppDefault `protobuf:"bytes,2,opt,name=app_default,json=appDefault,proto3" json:"app_default,omitempty"`
}

func (x *Popup) Reset() {
	*x = Popup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup) ProtoMessage() {}

func (x *Popup) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup.ProtoReflect.Descriptor instead.
func (*Popup) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{0}
}

func (x *Popup) GetOsDefault() *Popup_OSDefault {
	if x != nil {
		return x.OsDefault
	}
	return nil
}

func (x *Popup) GetAppDefault() *Popup_AppDefault {
	if x != nil {
		return x.AppDefault
	}
	return nil
}

type HomeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopBanners []*Banner            `protobuf:"bytes,1,rep,name=top_banners,json=topBanners,proto3" json:"top_banners,omitempty"`
	Groups     []*UpdatedTitleGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Popup      *Popup               `protobuf:"bytes,9,opt,name=popup,proto3" json:"popup,omitempty"`
}

func (x *HomeView) Reset() {
	*x = HomeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView) ProtoMessage() {}

func (x *HomeView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView.ProtoReflect.Descriptor instead.
func (*HomeView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{1}
}

func (x *HomeView) GetTopBanners() []*Banner {
	if x != nil {
		return x.TopBanners
	}
	return nil
}

func (x *HomeView) GetGroups() []*UpdatedTitleGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *HomeView) GetPopup() *Popup {
	if x != nil {
		return x.Popup
	}
	return nil
}

type Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp    uint32                `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Body         string                `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ResponseType Feedback_ResponseType `protobuf:"varint,3,opt,name=response_type,json=responseType,proto3,enum=Feedback_ResponseType" json:"response_type,omitempty"`
}

func (x *Feedback) Reset() {
	*x = Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feedback) ProtoMessage() {}

func (x *Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feedback.ProtoReflect.Descriptor instead.
func (*Feedback) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{2}
}

func (x *Feedback) GetTimeStamp() uint32 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Feedback) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Feedback) GetResponseType() Feedback_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return Feedback_QUESTION
}

type FeedbackView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackList []*Feedback `protobuf:"bytes,1,rep,name=feedback_list,json=feedbackList,proto3" json:"feedback_list,omitempty"`
}

func (x *FeedbackView) Reset() {
	*x = FeedbackView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackView) ProtoMessage() {}

func (x *FeedbackView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackView.ProtoReflect.Descriptor instead.
func (*FeedbackView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{3}
}

func (x *FeedbackView) GetFeedbackList() []*Feedback {
	if x != nil {
		return x.FeedbackList
	}
	return nil
}

type RegistrationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceSecret string `protobuf:"bytes,1,opt,name=device_secret,json=deviceSecret,proto3" json:"device_secret,omitempty"`
}

func (x *RegistrationData) Reset() {
	*x = RegistrationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationData) ProtoMessage() {}

func (x *RegistrationData) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationData.ProtoReflect.Descriptor instead.
func (*RegistrationData) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{4}
}

func (x *RegistrationData) GetDeviceSecret() string {
	if x != nil {
		return x.DeviceSecret
	}
	return ""
}

type Sns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Sns) Reset() {
	*x = Sns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sns) ProtoMessage() {}

func (x *Sns) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sns.ProtoReflect.Descriptor instead.
func (*Sns) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{5}
}

func (x *Sns) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Sns) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ChapterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaybeId         string     `protobuf:"bytes,1,opt,name=maybe_id,json=maybeId,proto3" json:"maybe_id,omitempty"`
	FirstChapters   []*Chapter `protobuf:"bytes,2,rep,name=first_chapters,json=firstChapters,proto3" json:"first_chapters,omitempty"`
	PremiumChapters []*Chapter `protobuf:"bytes,3,rep,name=premium_chapters,json=premiumChapters,proto3" json:"premium_chapters,omitempty"`
	LastChapters    []*Chapter `protobuf:"bytes,4,rep,name=last_chapters,json=lastChapters,proto3" json:"last_chapters,omitempty"`
}

func (x *ChapterList) Reset() {
	*x = ChapterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterList) ProtoMessage() {}

func (x *ChapterList) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterList.ProtoReflect.Descriptor instead.
func (*ChapterList) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{6}
}

func (x *ChapterList) GetMaybeId() string {
	if x != nil {
		return x.MaybeId
	}
	return ""
}

func (x *ChapterList) GetFirstChapters() []*Chapter {
	if x != nil {
		return x.FirstChapters
	}
	return nil
}

func (x *ChapterList) GetPremiumChapters() []*Chapter {
	if x != nil {
		return x.PremiumChapters
	}
	return nil
}

func (x *ChapterList) GetLastChapters() []*Chapter {
	if x != nil {
		return x.LastChapters
	}
	return nil
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId        uint32 `protobuf:"varint,1,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	ChapterId      uint32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SubTitle       string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	ThumbnailUrl   string `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	StartTimeStamp uint32 `protobuf:"varint,6,opt,name=start_time_stamp,json=startTimeStamp,proto3" json:"start_time_stamp,omitempty"`
	EndTimeStamp   uint32 `protobuf:"varint,7,opt,name=end_time_stamp,json=endTimeStamp,proto3" json:"end_time_stamp,omitempty"`
	AlreadyViewed  bool   `protobuf:"varint,8,opt,name=already_viewed,json=alreadyViewed,proto3" json:"already_viewed,omitempty"` // bool is_vertical_only = 9;
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{7}
}

func (x *Chapter) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Chapter) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *Chapter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chapter) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Chapter) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Chapter) GetStartTimeStamp() uint32 {
	if x != nil {
		return x.StartTimeStamp
	}
	return 0
}

func (x *Chapter) GetEndTimeStamp() uint32 {
	if x != nil {
		return x.EndTimeStamp
	}
	return 0
}

func (x *Chapter) GetAlreadyViewed() bool {
	if x != nil {
		return x.AlreadyViewed
	}
	return false
}

type AdNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Network:
	//
	//	*AdNetwork_Facebook_
	//	*AdNetwork_Admob_
	//	*AdNetwork_Adsense_
	Network isAdNetwork_Network `protobuf_oneof:"Network"`
}

func (x *AdNetwork) Reset() {
	*x = AdNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNetwork) ProtoMessage() {}

func (x *AdNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNetwork.ProtoReflect.Descriptor instead.
func (*AdNetwork) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{8}
}

func (m *AdNetwork) GetNetwork() isAdNetwork_Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (x *AdNetwork) GetFacebook() *AdNetwork_Facebook {
	if x, ok := x.GetNetwork().(*AdNetwork_Facebook_); ok {
		return x.Facebook
	}
	return nil
}

func (x *AdNetwork) GetAdmob() *AdNetwork_Admob {
	if x, ok := x.GetNetwork().(*AdNetwork_Admob_); ok {
		return x.Admob
	}
	return nil
}

func (x *AdNetwork) GetAdsense() *AdNetwork_Adsense {
	if x, ok := x.GetNetwork().(*AdNetwork_Adsense_); ok {
		return x.Adsense
	}
	return nil
}

type isAdNetwork_Network interface {
	isAdNetwork_Network()
}

type AdNetwork_Facebook_ struct {
	Facebook *AdNetwork_Facebook `protobuf:"bytes,1,opt,name=facebook,proto3,oneof"`
}

type AdNetwork_Admob_ struct {
	Admob *AdNetwork_Admob `protobuf:"bytes,2,opt,name=admob,proto3,oneof"`
}

type AdNetwork_Adsense_ struct {
	Adsense *AdNetwork_Adsense `protobuf:"bytes,3,opt,name=adsense,proto3,oneof"`
}

func (*AdNetwork_Facebook_) isAdNetwork_Network() {}

func (*AdNetwork_Admob_) isAdNetwork_Network() {}

func (*AdNetwork_Adsense_) isAdNetwork_Network() {}

type AdNetworkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdNetworks []*AdNetwork `protobuf:"bytes,1,rep,name=ad_networks,json=adNetworks,proto3" json:"ad_networks,omitempty"`
}

func (x *AdNetworkList) Reset() {
	*x = AdNetworkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNetworkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNetworkList) ProtoMessage() {}

func (x *AdNetworkList) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNetworkList.ProtoReflect.Descriptor instead.
func (*AdNetworkList) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{9}
}

func (x *AdNetworkList) GetAdNetworks() []*AdNetwork {
	if x != nil {
		return x.AdNetworks
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*Page_MangaPage_
	//	*Page_BannerList_
	//	*Page_LastPage_
	//	*Page_Advertisement
	Data isPage_Data `protobuf_oneof:"data"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10}
}

func (m *Page) GetData() isPage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Page) GetMangaPage() *Page_MangaPage {
	if x, ok := x.GetData().(*Page_MangaPage_); ok {
		return x.MangaPage
	}
	return nil
}

func (x *Page) GetBannerList() *Page_BannerList {
	if x, ok := x.GetData().(*Page_BannerList_); ok {
		return x.BannerList
	}
	return nil
}

func (x *Page) GetLastPage() *Page_LastPage {
	if x, ok := x.GetData().(*Page_LastPage_); ok {
		return x.LastPage
	}
	return nil
}

func (x *Page) GetAdvertisement() *AdNetworkList {
	if x, ok := x.GetData().(*Page_Advertisement); ok {
		return x.Advertisement
	}
	return nil
}

type isPage_Data interface {
	isPage_Data()
}

type Page_MangaPage_ struct {
	MangaPage *Page_MangaPage `protobuf:"bytes,1,opt,name=manga_page,json=mangaPage,proto3,oneof"`
}

type Page_BannerList_ struct {
	BannerList *Page_BannerList `protobuf:"bytes,2,opt,name=banner_list,json=bannerList,proto3,oneof"`
}

type Page_LastPage_ struct {
	LastPage *Page_LastPage `protobuf:"bytes,3,opt,name=last_page,json=lastPage,proto3,oneof"`
}

type Page_Advertisement struct {
	Advertisement *AdNetworkList `protobuf:"bytes,4,opt,name=advertisement,proto3,oneof"`
}

func (*Page_MangaPage_) isPage_Data() {}

func (*Page_BannerList_) isPage_Data() {}

func (*Page_LastPage_) isPage_Data() {}

func (*Page_Advertisement) isPage_Data() {}

type MangaViewer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages            []*Page    `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	ChapterId        uint32     `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Chapters         []*Chapter `protobuf:"bytes,3,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Sns              *Sns       `protobuf:"bytes,4,opt,name=sns,proto3" json:"sns,omitempty"`
	TitleName        string     `protobuf:"bytes,5,opt,name=title_name,json=titleName,proto3" json:"title_name,omitempty"`
	ChapterName      string     `protobuf:"bytes,6,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	NumberOfComments int32      `protobuf:"varint,7,opt,name=number_of_comments,json=numberOfComments,proto3" json:"number_of_comments,omitempty"`
	IsVerticalOnly   bool       `protobuf:"varint,8,opt,name=is_vertical_only,json=isVerticalOnly,proto3" json:"is_vertical_only,omitempty"`
	TitleId          uint32     `protobuf:"varint,9,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	StartFromRight   bool       `protobuf:"varint,10,opt,name=start_from_right,json=startFromRight,proto3" json:"start_from_right,omitempty"`
}

func (x *MangaViewer) Reset() {
	*x = MangaViewer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MangaViewer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaViewer) ProtoMessage() {}

func (x *MangaViewer) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaViewer.ProtoReflect.Descriptor instead.
func (*MangaViewer) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{11}
}

func (x *MangaViewer) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *MangaViewer) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *MangaViewer) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *MangaViewer) GetSns() *Sns {
	if x != nil {
		return x.Sns
	}
	return nil
}

func (x *MangaViewer) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *MangaViewer) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *MangaViewer) GetNumberOfComments() int32 {
	if x != nil {
		return x.NumberOfComments
	}
	return 0
}

func (x *MangaViewer) GetIsVerticalOnly() bool {
	if x != nil {
		return x.IsVerticalOnly
	}
	return false
}

func (x *MangaViewer) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *MangaViewer) GetStartFromRight() bool {
	if x != nil {
		return x.StartFromRight
	}
	return false
}

type Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId         uint32 `protobuf:"varint,1,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author          string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	PortaitImageUrl string `protobuf:"bytes,4,opt,name=portait_image_url,json=portaitImageUrl,proto3" json:"portait_image_url,omitempty"`
}

func (x *Title) Reset() {
	*x = Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{12}
}

func (x *Title) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Title) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Title) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Title) GetPortaitImageUrl() string {
	if x != nil {
		return x.PortaitImageUrl
	}
	return ""
}

type TitleDetailView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         *Title `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TitleImageUrl string `protobuf:"bytes,2,opt,name=title_image_url,json=titleImageUrl,proto3" json:"title_image_url,omitempty"`
	Overview      string `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	// string background_image_url = 4;
	NextTimeStamp uint32 `protobuf:"varint,5,opt,name=next_time_stamp,json=nextTimeStamp,proto3" json:"next_time_stamp,omitempty"`
	// UpdateTiming update_timing = 6;
	ViewingPeriodDescription string `protobuf:"bytes,7,opt,name=viewing_period_description,json=viewingPeriodDescription,proto3" json:"viewing_period_description,omitempty"`
	// string non_appearance_info = 8;
	ChapterList []*ChapterList `protobuf:"bytes,28,rep,name=chapter_list,json=chapterList,proto3" json:"chapter_list,omitempty"`
}

func (x *TitleDetailView) Reset() {
	*x = TitleDetailView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView) ProtoMessage() {}

func (x *TitleDetailView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView.ProtoReflect.Descriptor instead.
func (*TitleDetailView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{13}
}

func (x *TitleDetailView) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *TitleDetailView) GetTitleImageUrl() string {
	if x != nil {
		return x.TitleImageUrl
	}
	return ""
}

func (x *TitleDetailView) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *TitleDetailView) GetNextTimeStamp() uint32 {
	if x != nil {
		return x.NextTimeStamp
	}
	return 0
}

func (x *TitleDetailView) GetViewingPeriodDescription() string {
	if x != nil {
		return x.ViewingPeriodDescription
	}
	return ""
}

func (x *TitleDetailView) GetChapterList() []*ChapterList {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

type UpdatedTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           *Title `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ChapterId       uint32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterName     string `protobuf:"bytes,3,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	ChapterSubTitle string `protobuf:"bytes,4,opt,name=chapter_sub_title,json=chapterSubTitle,proto3" json:"chapter_sub_title,omitempty"`
	IsLatest        bool   `protobuf:"varint,5,opt,name=is_latest,json=isLatest,proto3" json:"is_latest,omitempty"`
	IsVerticalOnly  bool   `protobuf:"varint,6,opt,name=is_vertical_only,json=isVerticalOnly,proto3" json:"is_vertical_only,omitempty"`
}

func (x *UpdatedTitle) Reset() {
	*x = UpdatedTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedTitle) ProtoMessage() {}

func (x *UpdatedTitle) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedTitle.ProtoReflect.Descriptor instead.
func (*UpdatedTitle) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatedTitle) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *UpdatedTitle) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *UpdatedTitle) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *UpdatedTitle) GetChapterSubTitle() string {
	if x != nil {
		return x.ChapterSubTitle
	}
	return ""
}

func (x *UpdatedTitle) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *UpdatedTitle) GetIsVerticalOnly() bool {
	if x != nil {
		return x.IsVerticalOnly
	}
	return false
}

type UpdateProfileResultView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UpdateProfileResultView_UpdateResult `protobuf:"varint,1,opt,name=result,proto3,enum=UpdateProfileResultView_UpdateResult" json:"result,omitempty"`
}

func (x *UpdateProfileResultView) Reset() {
	*x = UpdateProfileResultView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileResultView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileResultView) ProtoMessage() {}

func (x *UpdateProfileResultView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileResultView.ProtoReflect.Descriptor instead.
func (*UpdateProfileResultView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProfileResultView) GetResult() UpdateProfileResultView_UpdateResult {
	if x != nil {
		return x.Result
	}
	return UpdateProfileResultView_SUCCESS
}

type UpdatedTitleGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string          `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Titles    []*UpdatedTitle `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *UpdatedTitleGroup) Reset() {
	*x = UpdatedTitleGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedTitleGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedTitleGroup) ProtoMessage() {}

func (x *UpdatedTitleGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedTitleGroup.ProtoReflect.Descriptor instead.
func (*UpdatedTitleGroup) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{16}
}

func (x *UpdatedTitleGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdatedTitleGroup) GetTitles() []*UpdatedTitle {
	if x != nil {
		return x.Titles
	}
	return nil
}

type TransitionAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method TransitionAction_PresentationMethod `protobuf:"varint,1,opt,name=method,proto3,enum=TransitionAction_PresentationMethod" json:"method,omitempty"`
	Url    string                              `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TransitionAction) Reset() {
	*x = TransitionAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitionAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitionAction) ProtoMessage() {}

func (x *TransitionAction) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitionAction.ProtoReflect.Descriptor instead.
func (*TransitionAction) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{17}
}

func (x *TransitionAction) GetMethod() TransitionAction_PresentationMethod {
	if x != nil {
		return x.Method
	}
	return TransitionAction_PUSH
}

func (x *TransitionAction) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string            `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Action   *TransitionAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Id       uint32            `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{18}
}

func (x *Banner) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Banner) GetAction() *TransitionAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Banner) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WebHomeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopBanners []*Banner            `protobuf:"bytes,1,rep,name=top_banners,json=topBanners,proto3" json:"top_banners,omitempty"`
	Groups     []*UpdatedTitleGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Ranking    []*Title             `protobuf:"bytes,3,rep,name=ranking,proto3" json:"ranking,omitempty"`
}

func (x *WebHomeView) Reset() {
	*x = WebHomeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebHomeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebHomeView) ProtoMessage() {}

func (x *WebHomeView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebHomeView.ProtoReflect.Descriptor instead.
func (*WebHomeView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{19}
}

func (x *WebHomeView) GetTopBanners() []*Banner {
	if x != nil {
		return x.TopBanners
	}
	return nil
}

func (x *WebHomeView) GetGroups() []*UpdatedTitleGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *WebHomeView) GetRanking() []*Title {
	if x != nil {
		return x.Ranking
	}
	return nil
}

type TitleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName       string   `protobuf:"bytes,1,opt,name=listName,proto3" json:"listName,omitempty"`
	FeaturedTitles []*Title `protobuf:"bytes,2,rep,name=featured_titles,json=featuredTitles,proto3" json:"featured_titles,omitempty"`
}

func (x *TitleList) Reset() {
	*x = TitleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleList) ProtoMessage() {}

func (x *TitleList) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleList.ProtoReflect.Descriptor instead.
func (*TitleList) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{20}
}

func (x *TitleList) GetListName() string {
	if x != nil {
		return x.ListName
	}
	return ""
}

func (x *TitleList) GetFeaturedTitles() []*Title {
	if x != nil {
		return x.FeaturedTitles
	}
	return nil
}

type FeaturedTitlesView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainBanner  *Banner                        `protobuf:"bytes,1,opt,name=main_banner,json=mainBanner,proto3" json:"main_banner,omitempty"`
	SubBanner_1 *Banner                        `protobuf:"bytes,2,opt,name=sub_banner_1,json=subBanner1,proto3" json:"sub_banner_1,omitempty"`
	SubBanner_2 *Banner                        `protobuf:"bytes,3,opt,name=sub_banner_2,json=subBanner2,proto3" json:"sub_banner_2,omitempty"`
	Contents    []*FeaturedTitlesView_Contents `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *FeaturedTitlesView) Reset() {
	*x = FeaturedTitlesView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedTitlesView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedTitlesView) ProtoMessage() {}

func (x *FeaturedTitlesView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedTitlesView.ProtoReflect.Descriptor instead.
func (*FeaturedTitlesView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{21}
}

func (x *FeaturedTitlesView) GetMainBanner() *Banner {
	if x != nil {
		return x.MainBanner
	}
	return nil
}

func (x *FeaturedTitlesView) GetSubBanner_1() *Banner {
	if x != nil {
		return x.SubBanner_1
	}
	return nil
}

func (x *FeaturedTitlesView) GetSubBanner_2() *Banner {
	if x != nil {
		return x.SubBanner_2
	}
	return nil
}

func (x *FeaturedTitlesView) GetContents() []*FeaturedTitlesView_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

type ProfileSettingsView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconList []*CommentIcon `protobuf:"bytes,1,rep,name=icon_list,json=iconList,proto3" json:"icon_list,omitempty"`
	UserName string         `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	MyIcon   *CommentIcon   `protobuf:"bytes,3,opt,name=my_icon,json=myIcon,proto3" json:"my_icon,omitempty"`
}

func (x *ProfileSettingsView) Reset() {
	*x = ProfileSettingsView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileSettingsView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSettingsView) ProtoMessage() {}

func (x *ProfileSettingsView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSettingsView.ProtoReflect.Descriptor instead.
func (*ProfileSettingsView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{22}
}

func (x *ProfileSettingsView) GetIconList() []*CommentIcon {
	if x != nil {
		return x.IconList
	}
	return nil
}

func (x *ProfileSettingsView) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ProfileSettingsView) GetMyIcon() *CommentIcon {
	if x != nil {
		return x.MyIcon
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Index         uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	UserName      string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	IconUrl       string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IsMyComment   bool   `protobuf:"varint,6,opt,name=is_my_comment,json=isMyComment,proto3" json:"is_my_comment,omitempty"`
	AlreadyLiked  bool   `protobuf:"varint,7,opt,name=already_liked,json=alreadyLiked,proto3" json:"already_liked,omitempty"`
	NumberOfLikes uint32 `protobuf:"varint,9,opt,name=number_of_likes,json=numberOfLikes,proto3" json:"number_of_likes,omitempty"`
	Body          string `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
	Created       uint32 `protobuf:"varint,11,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{23}
}

func (x *Comment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Comment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Comment) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Comment) GetIsMyComment() bool {
	if x != nil {
		return x.IsMyComment
	}
	return false
}

func (x *Comment) GetAlreadyLiked() bool {
	if x != nil {
		return x.AlreadyLiked
	}
	return false
}

func (x *Comment) GetNumberOfLikes() uint32 {
	if x != nil {
		return x.NumberOfLikes
	}
	return 0
}

func (x *Comment) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Comment) GetCreated() uint32 {
	if x != nil {
		return x.Created
	}
	return 0
}

type CommentIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageUrl string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *CommentIcon) Reset() {
	*x = CommentIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentIcon) ProtoMessage() {}

func (x *CommentIcon) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentIcon.ProtoReflect.Descriptor instead.
func (*CommentIcon) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{24}
}

func (x *CommentIcon) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentIcon) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type CommentListView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments      []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	IfSetUserName bool       `protobuf:"varint,2,opt,name=if_set_user_name,json=ifSetUserName,proto3" json:"if_set_user_name,omitempty"`
}

func (x *CommentListView) Reset() {
	*x = CommentListView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListView) ProtoMessage() {}

func (x *CommentListView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListView.ProtoReflect.Descriptor instead.
func (*CommentListView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{25}
}

func (x *CommentListView) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CommentListView) GetIfSetUserName() bool {
	if x != nil {
		return x.IfSetUserName
	}
	return false
}

type InitialView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GdprAgreementRequired bool   `protobuf:"varint,1,opt,name=gdpr_agreement_required,json=gdprAgreementRequired,proto3" json:"gdpr_agreement_required,omitempty"`
	EnglishTitlesCount    uint32 `protobuf:"varint,2,opt,name=english_titles_count,json=englishTitlesCount,proto3" json:"english_titles_count,omitempty"`
	SpanishTitlesCount    uint32 `protobuf:"varint,3,opt,name=spanish_titles_count,json=spanishTitlesCount,proto3" json:"spanish_titles_count,omitempty"`
}

func (x *InitialView) Reset() {
	*x = InitialView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialView) ProtoMessage() {}

func (x *InitialView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialView.ProtoReflect.Descriptor instead.
func (*InitialView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{26}
}

func (x *InitialView) GetGdprAgreementRequired() bool {
	if x != nil {
		return x.GdprAgreementRequired
	}
	return false
}

func (x *InitialView) GetEnglishTitlesCount() uint32 {
	if x != nil {
		return x.EnglishTitlesCount
	}
	return 0
}

func (x *InitialView) GetSpanishTitlesCount() uint32 {
	if x != nil {
		return x.SpanishTitlesCount
	}
	return 0
}

type SettingsView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyIcon                            *CommentIcon `protobuf:"bytes,1,opt,name=my_icon,json=myIcon,proto3" json:"my_icon,omitempty"`
	UserName                          string       `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NoticeOfNewsAndEvents             bool         `protobuf:"varint,3,opt,name=notice_of_news_and_events,json=noticeOfNewsAndEvents,proto3" json:"notice_of_news_and_events,omitempty"`
	NoticeOfUpdatesOfSubscribedTitles bool         `protobuf:"varint,4,opt,name=notice_of_updates_of_subscribed_titles,json=noticeOfUpdatesOfSubscribedTitles,proto3" json:"notice_of_updates_of_subscribed_titles,omitempty"`
	EnglishTitlesCount                uint32       `protobuf:"varint,5,opt,name=english_titles_count,json=englishTitlesCount,proto3" json:"english_titles_count,omitempty"`
	SpanishTitlesCount                uint32       `protobuf:"varint,6,opt,name=spanish_titles_count,json=spanishTitlesCount,proto3" json:"spanish_titles_count,omitempty"`
}

func (x *SettingsView) Reset() {
	*x = SettingsView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsView) ProtoMessage() {}

func (x *SettingsView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsView.ProtoReflect.Descriptor instead.
func (*SettingsView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{27}
}

func (x *SettingsView) GetMyIcon() *CommentIcon {
	if x != nil {
		return x.MyIcon
	}
	return nil
}

func (x *SettingsView) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SettingsView) GetNoticeOfNewsAndEvents() bool {
	if x != nil {
		return x.NoticeOfNewsAndEvents
	}
	return false
}

func (x *SettingsView) GetNoticeOfUpdatesOfSubscribedTitles() bool {
	if x != nil {
		return x.NoticeOfUpdatesOfSubscribedTitles
	}
	return false
}

func (x *SettingsView) GetEnglishTitlesCount() uint32 {
	if x != nil {
		return x.EnglishTitlesCount
	}
	return 0
}

func (x *SettingsView) GetSpanishTitlesCount() uint32 {
	if x != nil {
		return x.SpanishTitlesCount
	}
	return 0
}

type TitleRankingView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *TitleRankingView) Reset() {
	*x = TitleRankingView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleRankingView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleRankingView) ProtoMessage() {}

func (x *TitleRankingView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleRankingView.ProtoReflect.Descriptor instead.
func (*TitleRankingView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{28}
}

func (x *TitleRankingView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

type AllTitlesView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *AllTitlesView) Reset() {
	*x = AllTitlesView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTitlesView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTitlesView) ProtoMessage() {}

func (x *AllTitlesView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTitlesView.ProtoReflect.Descriptor instead.
func (*AllTitlesView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{29}
}

func (x *AllTitlesView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

type SubscribedTitlesView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *SubscribedTitlesView) Reset() {
	*x = SubscribedTitlesView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribedTitlesView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribedTitlesView) ProtoMessage() {}

func (x *SubscribedTitlesView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribedTitlesView.ProtoReflect.Descriptor instead.
func (*SubscribedTitlesView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{30}
}

func (x *SubscribedTitlesView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

type ServiceAnnouncement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Date  int32  `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ServiceAnnouncement) Reset() {
	*x = ServiceAnnouncement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAnnouncement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAnnouncement) ProtoMessage() {}

func (x *ServiceAnnouncement) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAnnouncement.ProtoReflect.Descriptor instead.
func (*ServiceAnnouncement) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{31}
}

func (x *ServiceAnnouncement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ServiceAnnouncement) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ServiceAnnouncement) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

type ServiceAnnouncementsView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAnnouncements []*ServiceAnnouncement `protobuf:"bytes,1,rep,name=service_announcements,json=serviceAnnouncements,proto3" json:"service_announcements,omitempty"`
}

func (x *ServiceAnnouncementsView) Reset() {
	*x = ServiceAnnouncementsView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAnnouncementsView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAnnouncementsView) ProtoMessage() {}

func (x *ServiceAnnouncementsView) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAnnouncementsView.ProtoReflect.Descriptor instead.
func (*ServiceAnnouncementsView) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{32}
}

func (x *ServiceAnnouncementsView) GetServiceAnnouncements() []*ServiceAnnouncement {
	if x != nil {
		return x.ServiceAnnouncements
	}
	return nil
}

type SuccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFeaturedUpdated bool `protobuf:"varint,1,opt,name=is_featured_updated,json=isFeaturedUpdated,proto3" json:"is_featured_updated,omitempty"`
	// Types that are assignable to Data:
	//
	//	*SuccessResult_RegisterationData
	//	*SuccessResult_HomeView
	//	*SuccessResult_FeaturedTitlesView
	//	*SuccessResult_AllTitlesView
	//	*SuccessResult_TitleRankingView
	//	*SuccessResult_SubscribedTitlesView
	//	*SuccessResult_TitleDetailView
	//	*SuccessResult_CommentListView
	//	*SuccessResult_MangaViewer
	//	*SuccessResult_WebHomeView
	//	*SuccessResult_SettingsView
	//	*SuccessResult_ProfileSettingsView
	//	*SuccessResult_UpdateProfileResultView
	//	*SuccessResult_ServiceAnnouncementsView
	//	*SuccessResult_InitialView
	//	*SuccessResult_FeedbackView
	Data isSuccessResult_Data `protobuf_oneof:"data"`
}

func (x *SuccessResult) Reset() {
	*x = SuccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResult) ProtoMessage() {}

func (x *SuccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResult.ProtoReflect.Descriptor instead.
func (*SuccessResult) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{33}
}

func (x *SuccessResult) GetIsFeaturedUpdated() bool {
	if x != nil {
		return x.IsFeaturedUpdated
	}
	return false
}

func (m *SuccessResult) GetData() isSuccessResult_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SuccessResult) GetRegisterationData() *RegistrationData {
	if x, ok := x.GetData().(*SuccessResult_RegisterationData); ok {
		return x.RegisterationData
	}
	return nil
}

func (x *SuccessResult) GetHomeView() *HomeView {
	if x, ok := x.GetData().(*SuccessResult_HomeView); ok {
		return x.HomeView
	}
	return nil
}

func (x *SuccessResult) GetFeaturedTitlesView() *FeaturedTitlesView {
	if x, ok := x.GetData().(*SuccessResult_FeaturedTitlesView); ok {
		return x.FeaturedTitlesView
	}
	return nil
}

func (x *SuccessResult) GetAllTitlesView() *AllTitlesView {
	if x, ok := x.GetData().(*SuccessResult_AllTitlesView); ok {
		return x.AllTitlesView
	}
	return nil
}

func (x *SuccessResult) GetTitleRankingView() *TitleRankingView {
	if x, ok := x.GetData().(*SuccessResult_TitleRankingView); ok {
		return x.TitleRankingView
	}
	return nil
}

func (x *SuccessResult) GetSubscribedTitlesView() *SubscribedTitlesView {
	if x, ok := x.GetData().(*SuccessResult_SubscribedTitlesView); ok {
		return x.SubscribedTitlesView
	}
	return nil
}

func (x *SuccessResult) GetTitleDetailView() *TitleDetailView {
	if x, ok := x.GetData().(*SuccessResult_TitleDetailView); ok {
		return x.TitleDetailView
	}
	return nil
}

func (x *SuccessResult) GetCommentListView() *CommentListView {
	if x, ok := x.GetData().(*SuccessResult_CommentListView); ok {
		return x.CommentListView
	}
	return nil
}

func (x *SuccessResult) GetMangaViewer() *MangaViewer {
	if x, ok := x.GetData().(*SuccessResult_MangaViewer); ok {
		return x.MangaViewer
	}
	return nil
}

func (x *SuccessResult) GetWebHomeView() *WebHomeView {
	if x, ok := x.GetData().(*SuccessResult_WebHomeView); ok {
		return x.WebHomeView
	}
	return nil
}

func (x *SuccessResult) GetSettingsView() *SettingsView {
	if x, ok := x.GetData().(*SuccessResult_SettingsView); ok {
		return x.SettingsView
	}
	return nil
}

func (x *SuccessResult) GetProfileSettingsView() *ProfileSettingsView {
	if x, ok := x.GetData().(*SuccessResult_ProfileSettingsView); ok {
		return x.ProfileSettingsView
	}
	return nil
}

func (x *SuccessResult) GetUpdateProfileResultView() *UpdateProfileResultView {
	if x, ok := x.GetData().(*SuccessResult_UpdateProfileResultView); ok {
		return x.UpdateProfileResultView
	}
	return nil
}

func (x *SuccessResult) GetServiceAnnouncementsView() *ServiceAnnouncementsView {
	if x, ok := x.GetData().(*SuccessResult_ServiceAnnouncementsView); ok {
		return x.ServiceAnnouncementsView
	}
	return nil
}

func (x *SuccessResult) GetInitialView() *InitialView {
	if x, ok := x.GetData().(*SuccessResult_InitialView); ok {
		return x.InitialView
	}
	return nil
}

func (x *SuccessResult) GetFeedbackView() *FeedbackView {
	if x, ok := x.GetData().(*SuccessResult_FeedbackView); ok {
		return x.FeedbackView
	}
	return nil
}

type isSuccessResult_Data interface {
	isSuccessResult_Data()
}

type SuccessResult_RegisterationData struct {
	RegisterationData *RegistrationData `protobuf:"bytes,2,opt,name=registeration_data,json=registerationData,proto3,oneof"`
}

type SuccessResult_HomeView struct {
	HomeView *HomeView `protobuf:"bytes,3,opt,name=home_view,json=homeView,proto3,oneof"`
}

type SuccessResult_FeaturedTitlesView struct {
	FeaturedTitlesView *FeaturedTitlesView `protobuf:"bytes,4,opt,name=featured_titles_view,json=featuredTitlesView,proto3,oneof"`
}

type SuccessResult_AllTitlesView struct {
	AllTitlesView *AllTitlesView `protobuf:"bytes,5,opt,name=all_titles_view,json=allTitlesView,proto3,oneof"`
}

type SuccessResult_TitleRankingView struct {
	TitleRankingView *TitleRankingView `protobuf:"bytes,6,opt,name=title_ranking_view,json=titleRankingView,proto3,oneof"`
}

type SuccessResult_SubscribedTitlesView struct {
	SubscribedTitlesView *SubscribedTitlesView `protobuf:"bytes,7,opt,name=subscribed_titles_view,json=subscribedTitlesView,proto3,oneof"`
}

type SuccessResult_TitleDetailView struct {
	TitleDetailView *TitleDetailView `protobuf:"bytes,8,opt,name=title_detail_view,json=titleDetailView,proto3,oneof"`
}

type SuccessResult_CommentListView struct {
	CommentListView *CommentListView `protobuf:"bytes,9,opt,name=comment_list_view,json=commentListView,proto3,oneof"`
}

type SuccessResult_MangaViewer struct {
	MangaViewer *MangaViewer `protobuf:"bytes,10,opt,name=manga_viewer,json=mangaViewer,proto3,oneof"`
}

type SuccessResult_WebHomeView struct {
	WebHomeView *WebHomeView `protobuf:"bytes,11,opt,name=web_home_view,json=webHomeView,proto3,oneof"`
}

type SuccessResult_SettingsView struct {
	SettingsView *SettingsView `protobuf:"bytes,12,opt,name=settings_view,json=settingsView,proto3,oneof"`
}

type SuccessResult_ProfileSettingsView struct {
	ProfileSettingsView *ProfileSettingsView `protobuf:"bytes,13,opt,name=profile_settings_view,json=profileSettingsView,proto3,oneof"`
}

type SuccessResult_UpdateProfileResultView struct {
	UpdateProfileResultView *UpdateProfileResultView `protobuf:"bytes,14,opt,name=update_profile_result_view,json=updateProfileResultView,proto3,oneof"`
}

type SuccessResult_ServiceAnnouncementsView struct {
	ServiceAnnouncementsView *ServiceAnnouncementsView `protobuf:"bytes,15,opt,name=service_announcements_view,json=serviceAnnouncementsView,proto3,oneof"`
}

type SuccessResult_InitialView struct {
	InitialView *InitialView `protobuf:"bytes,16,opt,name=initial_view,json=initialView,proto3,oneof"`
}

type SuccessResult_FeedbackView struct {
	FeedbackView *FeedbackView `protobuf:"bytes,17,opt,name=feedback_view,json=feedbackView,proto3,oneof"`
}

func (*SuccessResult_RegisterationData) isSuccessResult_Data() {}

func (*SuccessResult_HomeView) isSuccessResult_Data() {}

func (*SuccessResult_FeaturedTitlesView) isSuccessResult_Data() {}

func (*SuccessResult_AllTitlesView) isSuccessResult_Data() {}

func (*SuccessResult_TitleRankingView) isSuccessResult_Data() {}

func (*SuccessResult_SubscribedTitlesView) isSuccessResult_Data() {}

func (*SuccessResult_TitleDetailView) isSuccessResult_Data() {}

func (*SuccessResult_CommentListView) isSuccessResult_Data() {}

func (*SuccessResult_MangaViewer) isSuccessResult_Data() {}

func (*SuccessResult_WebHomeView) isSuccessResult_Data() {}

func (*SuccessResult_SettingsView) isSuccessResult_Data() {}

func (*SuccessResult_ProfileSettingsView) isSuccessResult_Data() {}

func (*SuccessResult_UpdateProfileResultView) isSuccessResult_Data() {}

func (*SuccessResult_ServiceAnnouncementsView) isSuccessResult_Data() {}

func (*SuccessResult_InitialView) isSuccessResult_Data() {}

func (*SuccessResult_FeedbackView) isSuccessResult_Data() {}

type ErrorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       ErrorResult_Action `protobuf:"varint,1,opt,name=action,proto3,enum=ErrorResult_Action" json:"action,omitempty"`
	EnglishPopup *Popup_OSDefault   `protobuf:"bytes,2,opt,name=english_popup,json=englishPopup,proto3" json:"english_popup,omitempty"`
	SpanishPopup *Popup_OSDefault   `protobuf:"bytes,3,opt,name=spanish_popup,json=spanishPopup,proto3" json:"spanish_popup,omitempty"`
	DebugInfo    string             `protobuf:"bytes,4,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
}

func (x *ErrorResult) Reset() {
	*x = ErrorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult) ProtoMessage() {}

func (x *ErrorResult) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult.ProtoReflect.Descriptor instead.
func (*ErrorResult) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{34}
}

func (x *ErrorResult) GetAction() ErrorResult_Action {
	if x != nil {
		return x.Action
	}
	return ErrorResult_DEFAULT
}

func (x *ErrorResult) GetEnglishPopup() *Popup_OSDefault {
	if x != nil {
		return x.EnglishPopup
	}
	return nil
}

func (x *ErrorResult) GetSpanishPopup() *Popup_OSDefault {
	if x != nil {
		return x.SpanishPopup
	}
	return nil
}

func (x *ErrorResult) GetDebugInfo() string {
	if x != nil {
		return x.DebugInfo
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*Response_Success
	//	*Response_Error
	Data isResponse_Data `protobuf_oneof:"data"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{35}
}

func (m *Response) GetData() isResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Response) GetSuccess() *SuccessResult {
	if x, ok := x.GetData().(*Response_Success); ok {
		return x.Success
	}
	return nil
}

func (x *Response) GetError() *ErrorResult {
	if x, ok := x.GetData().(*Response_Error); ok {
		return x.Error
	}
	return nil
}

type isResponse_Data interface {
	isResponse_Data()
}

type Response_Success struct {
	Success *SuccessResult `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type Response_Error struct {
	Error *ErrorResult `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*Response_Success) isResponse_Data() {}

func (*Response_Error) isResponse_Data() {}

type Popup_AppDefault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string            `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Action   *TransitionAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Popup_AppDefault) Reset() {
	*x = Popup_AppDefault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup_AppDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup_AppDefault) ProtoMessage() {}

func (x *Popup_AppDefault) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup_AppDefault.ProtoReflect.Descriptor instead.
func (*Popup_AppDefault) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Popup_AppDefault) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Popup_AppDefault) GetAction() *TransitionAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type Popup_Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string            `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Action *TransitionAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Popup_Button) Reset() {
	*x = Popup_Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup_Button) ProtoMessage() {}

func (x *Popup_Button) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup_Button.ProtoReflect.Descriptor instead.
func (*Popup_Button) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Popup_Button) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Popup_Button) GetAction() *TransitionAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type Popup_OSDefault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject        string        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Body           string        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	OkButton       *Popup_Button `protobuf:"bytes,3,opt,name=ok_button,json=okButton,proto3" json:"ok_button,omitempty"`
	NeautralButton *Popup_Button `protobuf:"bytes,4,opt,name=neautral_button,json=neautralButton,proto3" json:"neautral_button,omitempty"`
	CancelButton   *Popup_Button `protobuf:"bytes,5,opt,name=cancel_button,json=cancelButton,proto3" json:"cancel_button,omitempty"`
}

func (x *Popup_OSDefault) Reset() {
	*x = Popup_OSDefault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup_OSDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup_OSDefault) ProtoMessage() {}

func (x *Popup_OSDefault) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup_OSDefault.ProtoReflect.Descriptor instead.
func (*Popup_OSDefault) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Popup_OSDefault) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Popup_OSDefault) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Popup_OSDefault) GetOkButton() *Popup_Button {
	if x != nil {
		return x.OkButton
	}
	return nil
}

func (x *Popup_OSDefault) GetNeautralButton() *Popup_Button {
	if x != nil {
		return x.NeautralButton
	}
	return nil
}

func (x *Popup_OSDefault) GetCancelButton() *Popup_Button {
	if x != nil {
		return x.CancelButton
	}
	return nil
}

type AdNetwork_Facebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlacementID string `protobuf:"bytes,1,opt,name=placementID,proto3" json:"placementID,omitempty"`
}

func (x *AdNetwork_Facebook) Reset() {
	*x = AdNetwork_Facebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNetwork_Facebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNetwork_Facebook) ProtoMessage() {}

func (x *AdNetwork_Facebook) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNetwork_Facebook.ProtoReflect.Descriptor instead.
func (*AdNetwork_Facebook) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AdNetwork_Facebook) GetPlacementID() string {
	if x != nil {
		return x.PlacementID
	}
	return ""
}

type AdNetwork_Admob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID string `protobuf:"bytes,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
}

func (x *AdNetwork_Admob) Reset() {
	*x = AdNetwork_Admob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNetwork_Admob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNetwork_Admob) ProtoMessage() {}

func (x *AdNetwork_Admob) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNetwork_Admob.ProtoReflect.Descriptor instead.
func (*AdNetwork_Admob) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{8, 1}
}

func (x *AdNetwork_Admob) GetUnitID() string {
	if x != nil {
		return x.UnitID
	}
	return ""
}

type AdNetwork_Adsense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID string `protobuf:"bytes,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
}

func (x *AdNetwork_Adsense) Reset() {
	*x = AdNetwork_Adsense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNetwork_Adsense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNetwork_Adsense) ProtoMessage() {}

func (x *AdNetwork_Adsense) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNetwork_Adsense.ProtoReflect.Descriptor instead.
func (*AdNetwork_Adsense) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{8, 2}
}

func (x *AdNetwork_Adsense) GetUnitID() string {
	if x != nil {
		return x.UnitID
	}
	return ""
}

type Page_BannerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerTitle string    `protobuf:"bytes,1,opt,name=banner_title,json=bannerTitle,proto3" json:"banner_title,omitempty"`
	Banners     []*Banner `protobuf:"bytes,2,rep,name=banners,proto3" json:"banners,omitempty"`
}

func (x *Page_BannerList) Reset() {
	*x = Page_BannerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page_BannerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page_BannerList) ProtoMessage() {}

func (x *Page_BannerList) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page_BannerList.ProtoReflect.Descriptor instead.
func (*Page_BannerList) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Page_BannerList) GetBannerTitle() string {
	if x != nil {
		return x.BannerTitle
	}
	return ""
}

func (x *Page_BannerList) GetBanners() []*Banner {
	if x != nil {
		return x.Banners
	}
	return nil
}

type Page_MangaPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl      string        `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Width         uint32        `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32        `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Type          Page_PageType `protobuf:"varint,4,opt,name=type,proto3,enum=Page_PageType" json:"type,omitempty"`
	EncryptionKey string        `protobuf:"bytes,5,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
}

func (x *Page_MangaPage) Reset() {
	*x = Page_MangaPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page_MangaPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page_MangaPage) ProtoMessage() {}

func (x *Page_MangaPage) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page_MangaPage.ProtoReflect.Descriptor instead.
func (*Page_MangaPage) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Page_MangaPage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Page_MangaPage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Page_MangaPage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Page_MangaPage) GetType() Page_PageType {
	if x != nil {
		return x.Type
	}
	return Page_SINGLE
}

func (x *Page_MangaPage) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

type Page_LastPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentChapter *Chapter   `protobuf:"bytes,1,opt,name=current_chapter,json=currentChapter,proto3" json:"current_chapter,omitempty"`
	NextChapter    *Chapter   `protobuf:"bytes,2,opt,name=next_chapter,json=nextChapter,proto3" json:"next_chapter,omitempty"`
	TopComments    []*Comment `protobuf:"bytes,3,rep,name=top_comments,json=topComments,proto3" json:"top_comments,omitempty"`
	IsSubscribed   bool       `protobuf:"varint,4,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	NextTimeStamp  uint32     `protobuf:"varint,5,opt,name=next_time_stamp,json=nextTimeStamp,proto3" json:"next_time_stamp,omitempty"`
	ChapterType    int32      `protobuf:"varint,6,opt,name=chapter_type,json=chapterType,proto3" json:"chapter_type,omitempty"`
}

func (x *Page_LastPage) Reset() {
	*x = Page_LastPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page_LastPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page_LastPage) ProtoMessage() {}

func (x *Page_LastPage) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page_LastPage.ProtoReflect.Descriptor instead.
func (*Page_LastPage) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Page_LastPage) GetCurrentChapter() *Chapter {
	if x != nil {
		return x.CurrentChapter
	}
	return nil
}

func (x *Page_LastPage) GetNextChapter() *Chapter {
	if x != nil {
		return x.NextChapter
	}
	return nil
}

func (x *Page_LastPage) GetTopComments() []*Comment {
	if x != nil {
		return x.TopComments
	}
	return nil
}

func (x *Page_LastPage) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *Page_LastPage) GetNextTimeStamp() uint32 {
	if x != nil {
		return x.NextTimeStamp
	}
	return 0
}

func (x *Page_LastPage) GetChapterType() int32 {
	if x != nil {
		return x.ChapterType
	}
	return 0
}

type FeaturedTitlesView_Contents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*FeaturedTitlesView_Contents_Banner
	//	*FeaturedTitlesView_Contents_TitleList
	Data isFeaturedTitlesView_Contents_Data `protobuf_oneof:"data"`
}

func (x *FeaturedTitlesView_Contents) Reset() {
	*x = FeaturedTitlesView_Contents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpproto_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedTitlesView_Contents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedTitlesView_Contents) ProtoMessage() {}

func (x *FeaturedTitlesView_Contents) ProtoReflect() protoreflect.Message {
	mi := &file_mpproto_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedTitlesView_Contents.ProtoReflect.Descriptor instead.
func (*FeaturedTitlesView_Contents) Descriptor() ([]byte, []int) {
	return file_mpproto_proto_rawDescGZIP(), []int{21, 0}
}

func (m *FeaturedTitlesView_Contents) GetData() isFeaturedTitlesView_Contents_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *FeaturedTitlesView_Contents) GetBanner() *Banner {
	if x, ok := x.GetData().(*FeaturedTitlesView_Contents_Banner); ok {
		return x.Banner
	}
	return nil
}

func (x *FeaturedTitlesView_Contents) GetTitleList() *TitleList {
	if x, ok := x.GetData().(*FeaturedTitlesView_Contents_TitleList); ok {
		return x.TitleList
	}
	return nil
}

type isFeaturedTitlesView_Contents_Data interface {
	isFeaturedTitlesView_Contents_Data()
}

type FeaturedTitlesView_Contents_Banner struct {
	Banner *Banner `protobuf:"bytes,1,opt,name=banner,proto3,oneof"`
}

type FeaturedTitlesView_Contents_TitleList struct {
	TitleList *TitleList `protobuf:"bytes,2,opt,name=title_list,json=titleList,proto3,oneof"`
}

func (*FeaturedTitlesView_Contents_Banner) isFeaturedTitlesView_Contents_Data() {}

func (*FeaturedTitlesView_Contents_TitleList) isFeaturedTitlesView_Contents_Data() {}

var File_mpproto_proto protoreflect.FileDescriptor

var file_mpproto_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdf, 0x03, 0x0a, 0x05, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x6f, 0x73, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x4f, 0x53, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x09, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x54,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd1, 0x01,
	0x0a, 0x09, 0x4f, 0x53, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x09, 0x6f, 0x6b, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50,
	0x6f, 0x70, 0x75, 0x70, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x08, 0x6f, 0x6b, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0f, 0x6e, 0x65, 0x61, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0e, 0x6e,
	0x65, 0x61, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x22, 0x7e, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a,
	0x0b, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x6f, 0x70,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x05, 0x70, 0x6f, 0x70, 0x75,
	0x70, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x01, 0x22, 0x3e, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x2b, 0x0a, 0x03, 0x53, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xbd,
	0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x79, 0x62, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x79, 0x62, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0f,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x2d, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x22, 0x90,
	0x02, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x22, 0x95, 0x02, 0x0a, 0x09, 0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x31, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x41, 0x64,
	0x6d, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x6f, 0x62, 0x12, 0x2e, 0x0a, 0x07,
	0x61, 0x64, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x41, 0x64, 0x73, 0x65, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x2c, 0x0a, 0x08,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x1f, 0x0a, 0x05, 0x41, 0x64,
	0x6d, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x1a, 0x21, 0x0a, 0x07, 0x41,
	0x64, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x42, 0x09,
	0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x61, 0x64,
	0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0a, 0x61, 0x64, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0xd0, 0x06, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x67,
	0x61, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x41, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x52,
	0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x1a, 0xa1, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0x87, 0x02, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x37, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x37, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x54, 0x45,
	0x53, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x02, 0x0a, 0x0b, 0x4d,
	0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x03,
	0x73, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x53, 0x6e, 0x73, 0x52,
	0x03, 0x73, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x69, 0x74, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x69, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x24, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x41,
	0x4e, 0x49, 0x53, 0x48, 0x10, 0x01, 0x22, 0xcd, 0x03, 0x0a, 0x0f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x3c, 0x0a, 0x1a, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x76, 0x69, 0x65, 0x77, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x4c, 0x4c, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x45,
	0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0x86, 0x01,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x4c, 0x59, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45,
	0x44, 0x4e, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55,
	0x52, 0x53, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41,
	0x59, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10,
	0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x41, 0x59, 0x10, 0x08, 0x22, 0xe1, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x56, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x47, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x02, 0x22,
	0x59, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x37, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x22, 0x60, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x57,
	0x65, 0x62, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x0b, 0x74, 0x6f,
	0x70, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x20, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x22, 0x58, 0x0a, 0x09, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0e, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0xb2, 0x02, 0x0a,
	0x12, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x31, 0x12, 0x29, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x32, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x62, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0a,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x29, 0x0a, 0x09, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x52, 0x06, 0x6d, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x86, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6d, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x3a, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x60, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x24, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x69, 0x66, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x66, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xa9, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x36, 0x0a, 0x17, 0x67, 0x64, 0x70, 0x72, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x67, 0x64, 0x70, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x67, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x70, 0x61,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x25, 0x0a, 0x07,
	0x6d, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x79, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6e, 0x65,
	0x77, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x66, 0x4e, 0x65, 0x77,
	0x73, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x26, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x6f, 0x66, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4f, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x6e, 0x67,
	0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73,
	0x70, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x32, 0x0a, 0x10, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e,
	0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x53,
	0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x65, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x49, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd0, 0x08, 0x0a, 0x0d, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x69, 0x73, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x12,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x11, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x47, 0x0a, 0x14, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52,
	0x12, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x38, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41,
	0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0d,
	0x61, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x41, 0x0a,
	0x12, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x10,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x4d, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x3e, 0x0a, 0x11, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x3e, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x31, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x65, 0x62, 0x48,
	0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x48, 0x6f,
	0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x4a, 0x0a, 0x15,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x48, 0x00, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x57, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x59, 0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77,
	0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x34, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x56, 0x69, 0x65, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x02,
	0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0d, 0x65, 0x6e,
	0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e, 0x4f, 0x53, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x50, 0x6f, 0x70, 0x75,
	0x70, 0x12, 0x35, 0x0a, 0x0d, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x70,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70,
	0x2e, 0x4f, 0x53, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x6e,
	0x69, 0x73, 0x68, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x4f, 0x49, 0x50, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x64, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x2f, 0x6d, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_mpproto_proto_rawDescOnce sync.Once
	file_mpproto_proto_rawDescData = file_mpproto_proto_rawDesc
)

func file_mpproto_proto_rawDescGZIP() []byte {
	file_mpproto_proto_rawDescOnce.Do(func() {
		file_mpproto_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpproto_proto_rawDescData)
	})
	return file_mpproto_proto_rawDescData
}

var file_mpproto_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_mpproto_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_mpproto_proto_goTypes = []any{
	(Feedback_ResponseType)(0),                // 0: Feedback.ResponseType
	(Page_PageType)(0),                        // 1: Page.PageType
	(Page_ChapterType)(0),                     // 2: Page.ChapterType
	(Title_Language)(0),                       // 3: Title.Language
	(TitleDetailView_Rating)(0),               // 4: TitleDetailView.Rating
	(TitleDetailView_UpdateTiming)(0),         // 5: TitleDetailView.UpdateTiming
	(UpdateProfileResultView_UpdateResult)(0), // 6: UpdateProfileResultView.UpdateResult
	(TransitionAction_PresentationMethod)(0),  // 7: TransitionAction.PresentationMethod
	(ErrorResult_Action)(0),                   // 8: ErrorResult.Action
	(*Popup)(nil),                             // 9: Popup
	(*HomeView)(nil),                          // 10: HomeView
	(*Feedback)(nil),                          // 11: Feedback
	(*FeedbackView)(nil),                      // 12: FeedbackView
	(*RegistrationData)(nil),                  // 13: RegistrationData
	(*Sns)(nil),                               // 14: Sns
	(*ChapterList)(nil),                       // 15: ChapterList
	(*Chapter)(nil),                           // 16: Chapter
	(*AdNetwork)(nil),                         // 17: AdNetwork
	(*AdNetworkList)(nil),                     // 18: AdNetworkList
	(*Page)(nil),                              // 19: Page
	(*MangaViewer)(nil),                       // 20: MangaViewer
	(*Title)(nil),                             // 21: Title
	(*TitleDetailView)(nil),                   // 22: TitleDetailView
	(*UpdatedTitle)(nil),                      // 23: UpdatedTitle
	(*UpdateProfileResultView)(nil),           // 24: UpdateProfileResultView
	(*UpdatedTitleGroup)(nil),                 // 25: UpdatedTitleGroup
	(*TransitionAction)(nil),                  // 26: TransitionAction
	(*Banner)(nil),                            // 27: Banner
	(*WebHomeView)(nil),                       // 28: WebHomeView
	(*TitleList)(nil),                         // 29: TitleList
	(*FeaturedTitlesView)(nil),                // 30: FeaturedTitlesView
	(*ProfileSettingsView)(nil),               // 31: ProfileSettingsView
	(*Comment)(nil),                           // 32: Comment
	(*CommentIcon)(nil),                       // 33: CommentIcon
	(*CommentListView)(nil),                   // 34: CommentListView
	(*InitialView)(nil),                       // 35: InitialView
	(*SettingsView)(nil),                      // 36: SettingsView
	(*TitleRankingView)(nil),                  // 37: TitleRankingView
	(*AllTitlesView)(nil),                     // 38: AllTitlesView
	(*SubscribedTitlesView)(nil),              // 39: SubscribedTitlesView
	(*ServiceAnnouncement)(nil),               // 40: ServiceAnnouncement
	(*ServiceAnnouncementsView)(nil),          // 41: ServiceAnnouncementsView
	(*SuccessResult)(nil),                     // 42: SuccessResult
	(*ErrorResult)(nil),                       // 43: ErrorResult
	(*Response)(nil),                          // 44: Response
	(*Popup_AppDefault)(nil),                  // 45: Popup.AppDefault
	(*Popup_Button)(nil),                      // 46: Popup.Button
	(*Popup_OSDefault)(nil),                   // 47: Popup.OSDefault
	(*AdNetwork_Facebook)(nil),                // 48: AdNetwork.Facebook
	(*AdNetwork_Admob)(nil),                   // 49: AdNetwork.Admob
	(*AdNetwork_Adsense)(nil),                 // 50: AdNetwork.Adsense
	(*Page_BannerList)(nil),                   // 51: Page.BannerList
	(*Page_MangaPage)(nil),                    // 52: Page.MangaPage
	(*Page_LastPage)(nil),                     // 53: Page.LastPage
	(*FeaturedTitlesView_Contents)(nil),       // 54: FeaturedTitlesView.Contents
}
var file_mpproto_proto_depIdxs = []int32{
	47, // 0: Popup.os_default:type_name -> Popup.OSDefault
	45, // 1: Popup.app_default:type_name -> Popup.AppDefault
	27, // 2: HomeView.top_banners:type_name -> Banner
	25, // 3: HomeView.groups:type_name -> UpdatedTitleGroup
	9,  // 4: HomeView.popup:type_name -> Popup
	0,  // 5: Feedback.response_type:type_name -> Feedback.ResponseType
	11, // 6: FeedbackView.feedback_list:type_name -> Feedback
	16, // 7: ChapterList.first_chapters:type_name -> Chapter
	16, // 8: ChapterList.premium_chapters:type_name -> Chapter
	16, // 9: ChapterList.last_chapters:type_name -> Chapter
	48, // 10: AdNetwork.facebook:type_name -> AdNetwork.Facebook
	49, // 11: AdNetwork.admob:type_name -> AdNetwork.Admob
	50, // 12: AdNetwork.adsense:type_name -> AdNetwork.Adsense
	17, // 13: AdNetworkList.ad_networks:type_name -> AdNetwork
	52, // 14: Page.manga_page:type_name -> Page.MangaPage
	51, // 15: Page.banner_list:type_name -> Page.BannerList
	53, // 16: Page.last_page:type_name -> Page.LastPage
	18, // 17: Page.advertisement:type_name -> AdNetworkList
	19, // 18: MangaViewer.pages:type_name -> Page
	16, // 19: MangaViewer.chapters:type_name -> Chapter
	14, // 20: MangaViewer.sns:type_name -> Sns
	21, // 21: TitleDetailView.title:type_name -> Title
	15, // 22: TitleDetailView.chapter_list:type_name -> ChapterList
	21, // 23: UpdatedTitle.title:type_name -> Title
	6,  // 24: UpdateProfileResultView.result:type_name -> UpdateProfileResultView.UpdateResult
	23, // 25: UpdatedTitleGroup.titles:type_name -> UpdatedTitle
	7,  // 26: TransitionAction.method:type_name -> TransitionAction.PresentationMethod
	26, // 27: Banner.action:type_name -> TransitionAction
	27, // 28: WebHomeView.top_banners:type_name -> Banner
	25, // 29: WebHomeView.groups:type_name -> UpdatedTitleGroup
	21, // 30: WebHomeView.ranking:type_name -> Title
	21, // 31: TitleList.featured_titles:type_name -> Title
	27, // 32: FeaturedTitlesView.main_banner:type_name -> Banner
	27, // 33: FeaturedTitlesView.sub_banner_1:type_name -> Banner
	27, // 34: FeaturedTitlesView.sub_banner_2:type_name -> Banner
	54, // 35: FeaturedTitlesView.contents:type_name -> FeaturedTitlesView.Contents
	33, // 36: ProfileSettingsView.icon_list:type_name -> CommentIcon
	33, // 37: ProfileSettingsView.my_icon:type_name -> CommentIcon
	32, // 38: CommentListView.comments:type_name -> Comment
	33, // 39: SettingsView.my_icon:type_name -> CommentIcon
	21, // 40: TitleRankingView.titles:type_name -> Title
	21, // 41: AllTitlesView.titles:type_name -> Title
	21, // 42: SubscribedTitlesView.titles:type_name -> Title
	40, // 43: ServiceAnnouncementsView.service_announcements:type_name -> ServiceAnnouncement
	13, // 44: SuccessResult.registeration_data:type_name -> RegistrationData
	10, // 45: SuccessResult.home_view:type_name -> HomeView
	30, // 46: SuccessResult.featured_titles_view:type_name -> FeaturedTitlesView
	38, // 47: SuccessResult.all_titles_view:type_name -> AllTitlesView
	37, // 48: SuccessResult.title_ranking_view:type_name -> TitleRankingView
	39, // 49: SuccessResult.subscribed_titles_view:type_name -> SubscribedTitlesView
	22, // 50: SuccessResult.title_detail_view:type_name -> TitleDetailView
	34, // 51: SuccessResult.comment_list_view:type_name -> CommentListView
	20, // 52: SuccessResult.manga_viewer:type_name -> MangaViewer
	28, // 53: SuccessResult.web_home_view:type_name -> WebHomeView
	36, // 54: SuccessResult.settings_view:type_name -> SettingsView
	31, // 55: SuccessResult.profile_settings_view:type_name -> ProfileSettingsView
	24, // 56: SuccessResult.update_profile_result_view:type_name -> UpdateProfileResultView
	41, // 57: SuccessResult.service_announcements_view:type_name -> ServiceAnnouncementsView
	35, // 58: SuccessResult.initial_view:type_name -> InitialView
	12, // 59: SuccessResult.feedback_view:type_name -> FeedbackView
	8,  // 60: ErrorResult.action:type_name -> ErrorResult.Action
	47, // 61: ErrorResult.english_popup:type_name -> Popup.OSDefault
	47, // 62: ErrorResult.spanish_popup:type_name -> Popup.OSDefault
	42, // 63: Response.success:type_name -> SuccessResult
	43, // 64: Response.error:type_name -> ErrorResult
	26, // 65: Popup.AppDefault.action:type_name -> TransitionAction
	26, // 66: Popup.Button.action:type_name -> TransitionAction
	46, // 67: Popup.OSDefault.ok_button:type_name -> Popup.Button
	46, // 68: Popup.OSDefault.neautral_button:type_name -> Popup.Button
	46, // 69: Popup.OSDefault.cancel_button:type_name -> Popup.Button
	27, // 70: Page.BannerList.banners:type_name -> Banner
	1,  // 71: Page.MangaPage.type:type_name -> Page.PageType
	16, // 72: Page.LastPage.current_chapter:type_name -> Chapter
	16, // 73: Page.LastPage.next_chapter:type_name -> Chapter
	32, // 74: Page.LastPage.top_comments:type_name -> Comment
	27, // 75: FeaturedTitlesView.Contents.banner:type_name -> Banner
	29, // 76: FeaturedTitlesView.Contents.title_list:type_name -> TitleList
	77, // [77:77] is the sub-list for method output_type
	77, // [77:77] is the sub-list for method input_type
	77, // [77:77] is the sub-list for extension type_name
	77, // [77:77] is the sub-list for extension extendee
	0,  // [0:77] is the sub-list for field type_name
}

func init() { file_mpproto_proto_init() }
func file_mpproto_proto_init() {
	if File_mpproto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mpproto_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Popup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HomeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FeedbackView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RegistrationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Sns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ChapterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AdNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AdNetworkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MangaViewer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TitleDetailView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatedTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProfileResultView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatedTitleGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*TransitionAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*WebHomeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TitleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*FeaturedTitlesView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ProfileSettingsView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CommentIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CommentListView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*InitialView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*SettingsView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*TitleRankingView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AllTitlesView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribedTitlesView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceAnnouncement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceAnnouncementsView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SuccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*Popup_AppDefault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*Popup_Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*Popup_OSDefault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*AdNetwork_Facebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*AdNetwork_Admob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*AdNetwork_Adsense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*Page_BannerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*Page_MangaPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*Page_LastPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpproto_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*FeaturedTitlesView_Contents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mpproto_proto_msgTypes[8].OneofWrappers = []any{
		(*AdNetwork_Facebook_)(nil),
		(*AdNetwork_Admob_)(nil),
		(*AdNetwork_Adsense_)(nil),
	}
	file_mpproto_proto_msgTypes[10].OneofWrappers = []any{
		(*Page_MangaPage_)(nil),
		(*Page_BannerList_)(nil),
		(*Page_LastPage_)(nil),
		(*Page_Advertisement)(nil),
	}
	file_mpproto_proto_msgTypes[33].OneofWrappers = []any{
		(*SuccessResult_RegisterationData)(nil),
		(*SuccessResult_HomeView)(nil),
		(*SuccessResult_FeaturedTitlesView)(nil),
		(*SuccessResult_AllTitlesView)(nil),
		(*SuccessResult_TitleRankingView)(nil),
		(*SuccessResult_SubscribedTitlesView)(nil),
		(*SuccessResult_TitleDetailView)(nil),
		(*SuccessResult_CommentListView)(nil),
		(*SuccessResult_MangaViewer)(nil),
		(*SuccessResult_WebHomeView)(nil),
		(*SuccessResult_SettingsView)(nil),
		(*SuccessResult_ProfileSettingsView)(nil),
		(*SuccessResult_UpdateProfileResultView)(nil),
		(*SuccessResult_ServiceAnnouncementsView)(nil),
		(*SuccessResult_InitialView)(nil),
		(*SuccessResult_FeedbackView)(nil),
	}
	file_mpproto_proto_msgTypes[35].OneofWrappers = []any{
		(*Response_Success)(nil),
		(*Response_Error)(nil),
	}
	file_mpproto_proto_msgTypes[45].OneofWrappers = []any{
		(*FeaturedTitlesView_Contents_Banner)(nil),
		(*FeaturedTitlesView_Contents_TitleList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpproto_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mpproto_proto_goTypes,
		DependencyIndexes: file_mpproto_proto_depIdxs,
		EnumInfos:         file_mpproto_proto_enumTypes,
		MessageInfos:      file_mpproto_proto_msgTypes,
	}.Build()
	File_mpproto_proto = out.File
	file_mpproto_proto_rawDesc = nil
	file_mpproto_proto_goTypes = nil
	file_mpproto_proto_depIdxs = nil
}
